@model IEnumerable<QuanLyLamDep.Models.Product>
@{
    ViewBag.Title = "Xác Nhận Thanh Toán Sản Phẩm";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
    var quantities = ViewBag.ProductQuantities as Dictionary<int, int>;
    var total = ViewBag.SelectedTotal as decimal? ?? 0;
}

<div class="payment-container">
    <div class="payment-wrapper">
        <div class="payment-header">
            <h1>Xác Nhận Thanh Toán</h1>
            <p>Vui lòng kiểm tra thông tin sản phẩm trước khi thanh toán</p>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="payment-card">
                <div class="payment-card-header">
                    <h3>Chi Tiết Sản Phẩm</h3>
                </div>

                <div class="services-list">
                    @foreach (var item in Model)
                    {
                        var qty = quantities.ContainsKey(item.ProductID) ? quantities[item.ProductID] : 0;
                        <div class="service-item">
                            <div class="service-info">
                                <div class="service-icon">🧸</div>
                                <div class="service-details">
                                    <div class="service-name">@item.Name</div>
                                    <div class="service-description">Số lượng: @qty</div>
                                </div>
                            </div>
                            <div class="service-price">@String.Format("{0:N0} VNĐ", item.UnitPrice * qty)</div>
                        </div>
                    }
                </div>

                <div class="payment-total">
                    <span>Tổng Thanh Toán:</span>
                    <span>@String.Format("{0:N0} VNĐ", total)</span>
                </div>
            </div>

            <div class="payment-summary">
                <div class="summary-title">Tóm Tắt Đơn Hàng</div>
                <div class="summary-item">
                    <span class="summary-label">Tổng sản phẩm:</span>
                    <span class="summary-value">@quantities.Values.Sum() sản phẩm</span>
                </div>
                <div class="summary-item">
                    <span class="summary-label">Tổng tiền:</span>
                    <span class="summary-value">@String.Format("{0:N0} VNĐ", total)</span>
                </div>
            </div>

            <div class="payment-actions">
                <a href="@Url.Action("Index", "Products")" class="btn-payment btn-back">
                    Quay Lại
                </a>
                @{
                    var productIds = string.Join(",", quantities.Keys);
                    var redirectUrl = Url.Action("EnterCustomerInfoProduct", "Payments") + "?selectedProductIds=" + productIds;
                }
                <a href="@redirectUrl" class="btn-payment btn-confirm">
                    Xác Nhận & Thanh Toán
                </a>
            </div>
        }
        else
        {
            <div class="empty-cart">
                <h2>🛒 Giỏ hàng trống</h2>
                <p>Bạn chưa chọn sản phẩm nào để thanh toán</p>
                <a href="@Url.Action("Index", "Products")" class="btn-payment btn-back">
                    Chọn Sản Phẩm
                </a>
            </div>
        }
    </div>
</div>

<!-- CSS & Script giữ nguyên như phần dịch vụ -->
<style>
    @@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

    body {
        font-family: 'Roboto', sans-serif;
    }

    .payment-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .payment-wrapper {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    .payment-header {
        text-align: center;
        color: white;
        margin-bottom: 2rem;
    }

        .payment-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .payment-header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

    .payment-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .payment-card-header {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        padding: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }

        .payment-card-header h3 {
            margin: 0;
            font-size: 1.3rem;
            font-weight: 600;
        }

        .payment-card-header::before {
            content: '🧾';
            font-size: 1.5rem;
        }

    .services-list {
        padding: 0;
    }

    .service-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem;
        border-bottom: 1px solid #f0f0f0;
        transition: background 0.3s ease;
    }

        .service-item:hover {
            background: #f8f9fa;
        }

        .service-item:last-child {
            border-bottom: none;
        }

    .service-info {
        flex: 1;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .service-icon {
        width: 50px;
        height: 50px;
        background: linear-gradient(45deg, #667eea, #764ba2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: white;
        flex-shrink: 0;
    }

    .service-details {
        flex: 1;
    }

    .service-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 0.3rem;
    }

    .service-description {
        font-size: 0.9rem;
        color: #666;
    }

    .service-price {
        font-size: 1.2rem;
        font-weight: 700;
        color: #e91e63;
        text-align: right;
    }

    .payment-total {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        padding: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 1.4rem;
        font-weight: 700;
    }

    .payment-summary {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .summary-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 1.5rem;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

        .summary-title::before {
            content: '📊';
            font-size: 1.5rem;
        }

    .summary-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 0;
        border-bottom: 1px solid #f0f0f0;
    }

        .summary-item:last-child {
            border-bottom: none;
            font-weight: 700;
            font-size: 1.1rem;
            color: #e91e63;
        }

    .summary-label {
        color: #666;
    }

    .summary-value {
        font-weight: 600;
        color: #333;
    }

    .payment-actions {
        display: flex;
        gap: 1rem;
        justify-content: center;
        margin-top: 2rem;
    }

    .btn-payment {
        padding: 1rem 2rem;
        border: none;
        border-radius: 25px;
        font-size: 1.1rem;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        text-align: center;
    }

    .btn-back {
        background: #6c757d;
        color: white;
    }

        .btn-back:hover {
            background: #5a6268;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            text-decoration: none;
        }

    .btn-confirm {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
        position: relative;
        overflow: hidden;
    }

        .btn-confirm:hover {
            background: linear-gradient(45deg, #218838, #1ea080);
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(40,167,69,0.3);
            text-decoration: none;
        }

        .btn-confirm::before {
            content: '✓';
            font-size: 1.2rem;
        }
</style>
