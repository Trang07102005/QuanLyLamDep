@model IEnumerable<QuanLyLamDep.Models.Service>
@{
    ViewBag.Title = "Xác nhận thanh toán";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<style>
    .payment-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .payment-wrapper {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    .payment-header {
        text-align: center;
        color: white;
        margin-bottom: 2rem;
    }

    .payment-header h1 {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }

    .payment-header p {
        font-size: 1.1rem;
        opacity: 0.9;
    }

    .payment-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .payment-card-header {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        padding: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }

    .payment-card-header h3 {
        margin: 0;
        font-size: 1.3rem;
        font-weight: 600;
    }

    .payment-card-header::before {
        content: '🧾';
        font-size: 1.5rem;
    }

    .services-list {
        padding: 0;
    }

    .service-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem;
        border-bottom: 1px solid #f0f0f0;
        transition: background 0.3s ease;
    }

    .service-item:hover {
        background: #f8f9fa;
    }

    .service-item:last-child {
        border-bottom: none;
    }

    .service-info {
        flex: 1;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .service-icon {
        width: 50px;
        height: 50px;
        background: linear-gradient(45deg, #667eea, #764ba2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: white;
        flex-shrink: 0;
    }

    .service-details {
        flex: 1;
    }

    .service-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 0.3rem;
    }

    .service-description {
        font-size: 0.9rem;
        color: #666;
    }

    .service-price {
        font-size: 1.2rem;
        font-weight: 700;
        color: #e91e63;
        text-align: right;
    }

    .payment-total {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        padding: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 1.4rem;
        font-weight: 700;
    }

    .payment-total::before {
        content: '💰';
        font-size: 1.8rem;
        margin-right: 1rem;
    }

    .payment-actions {
        display: flex;
        gap: 1rem;
        justify-content: center;
        margin-top: 2rem;
    }

    .btn-payment {
        padding: 1rem 2rem;
        border: none;
        border-radius: 25px;
        font-size: 1.1rem;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        text-align: center;
    }

    .btn-back {
        background: #6c757d;
        color: white;
    }

    .btn-back:hover {
        background: #5a6268;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        color: white;
        text-decoration: none;
    }

    .btn-back::before {
        content: '←';
        font-size: 1.2rem;
    }

    .btn-confirm {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
        position: relative;
        overflow: hidden;
    }

    .btn-confirm:hover {
        background: linear-gradient(45deg, #218838, #1ea080);
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(40, 167, 69, 0.3);
        color: white;
        text-decoration: none;
    }

    .btn-confirm::before {
        content: '✓';
        font-size: 1.2rem;
    }

    .btn-confirm::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        animation: shine 2s infinite;
    }

    @@keyframes shine {
        0% { left: -100%; }
        50% { left: 100%; }
        100% { left: 100%; }
    }

    .payment-summary {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .summary-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 1.5rem;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .summary-title::before {
        content: '📊';
        font-size: 1.5rem;
    }

    .summary-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 0;
        border-bottom: 1px solid #f0f0f0;
    }

    .summary-item:last-child {
        border-bottom: none;
        font-weight: 700;
        font-size: 1.1rem;
        color: #e91e63;
    }

    .summary-label {
        color: #666;
    }

    .summary-value {
        font-weight: 600;
        color: #333;
    }

    .empty-cart {
        text-align: center;
        color: white;
        padding: 3rem;
    }

    .empty-cart h2 {
        font-size: 2rem;
        margin-bottom: 1rem;
    }

    .empty-cart p {
        font-size: 1.1rem;
        opacity: 0.9;
        margin-bottom: 2rem;
    }

    @@media (max-width: 768px) {
        .payment-header h1 {
            font-size: 2rem;
        }

        .payment-actions {
            flex-direction: column;
            gap: 1rem;
        }

        .btn-payment {
            width: 100%;
            justify-content: center;
        }

        .service-item {
            flex-direction: column;
            text-align: center;
            gap: 1rem;
        }

        .service-info {
            flex-direction: column;
            text-align: center;
        }

        .service-price {
            text-align: center;
        }

        .payment-total {
            flex-direction: column;
            text-align: center;
            gap: 1rem;
        }
    }
</style>

<div class="payment-container">
    <div class="payment-wrapper">
        <div class="payment-header">
            <h1>Xác Nhận Thanh Toán</h1>
            <p>Vui lòng kiểm tra thông tin dịch vụ trước khi thanh toán</p>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="payment-card">
                <div class="payment-card-header">
                    <h3>Chi Tiết Dịch Vụ</h3>
                </div>

                <div class="services-list">
                    @foreach (var item in Model)
                    {
                        <div class="service-item">
                            <div class="service-info">
                                <div class="service-icon">💎</div>
                                <div class="service-details">
                                    <div class="service-name">@item.Name</div>
                                    <div class="service-description">Thời gian: @item.Duration phút</div>
                                </div>
                            </div>
                            <div class="service-price">@String.Format("{0:N0} VNĐ", item.Price)</div>
                        </div>
                    }
                </div>

                <div class="payment-total">
                    <span>Tổng Thanh Toán:</span>
                    <span>@String.Format("{0:N0} VNĐ", ViewBag.SelectedTotal)</span>
                </div>
            </div>

            <div class="payment-summary">
                <div class="summary-title">Tóm Tắt Đơn Hàng</div>
                <div class="summary-item">
                    <span class="summary-label">Số lượng dịch vụ:</span>
                    <span class="summary-value">@Model.Count() dịch vụ</span>
                </div>
                <div class="summary-item">
                    <span class="summary-label">Tổng thời gian dự kiến:</span>
                    <span class="summary-value">@Model.Sum(x => x.Duration) phút</span>
                </div>
                <div class="summary-item">
                    <span class="summary-label">Tổng tiền:</span>
                    <span class="summary-value">@String.Format("{0:N0} VNĐ", ViewBag.SelectedTotal)</span>
                </div>
            </div>

            <div class="payment-actions">
                <a href="@Url.Action("Index", "Services")" class="btn-payment btn-back">
                    Quay Lại
                </a>
                @{
                    var serviceIds = string.Join(",", Model.Select(s => s.ServiceID)); //
                    var redirectUrl = Url.Action("EnterCustomerInfo", "Payments") + "?selectedServiceIds=" + serviceIds;
                }
                <a href="@redirectUrl" class="btn-payment btn-confirm">
                    Xác Nhận & Thanh Toán
                </a>

            </div>
        }
        else
        {
            <div class="empty-cart">
                <h2>🛒 Giỏ hàng trống</h2>
                <p>Bạn chưa chọn dịch vụ nào để thanh toán</p>
                <a href="@Url.Action("Index", "Service")" class="btn-payment btn-back">
                    Chọn Dịch Vụ
                </a>
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add entrance animation
        const paymentCard = document.querySelector('.payment-card');
        if (paymentCard) {
            paymentCard.style.transform = 'translateY(20px)';
            paymentCard.style.opacity = '0';

            setTimeout(() => {
                paymentCard.style.transition = 'all 0.6s ease';
                paymentCard.style.transform = 'translateY(0)';
                paymentCard.style.opacity = '1';
            }, 100);
        }

        // Add stagger animation for service items
        const serviceItems = document.querySelectorAll('.service-item');
        serviceItems.forEach((item, index) => {
            item.style.transform = 'translateX(-20px)';
            item.style.opacity = '0';

            setTimeout(() => {
                item.style.transition = 'all 0.4s ease';
                item.style.transform = 'translateX(0)';
                item.style.opacity = '1';
            }, 200 + (index * 100));
        });

        // Add click effect for buttons
        const buttons = document.querySelectorAll('.btn-payment');
        buttons.forEach(button => {
            button.addEventListener('click', function(e) {
                const ripple = document.createElement('span');
                ripple.style.cssText = `
                    position: absolute;
                    border-radius: 50%;
                    background: rgba(255,255,255,0.6);
                    pointer-events: none;
                    transform: scale(0);
                    animation: ripple 0.6s linear;
                    width: 20px;
                    height: 20px;
                    left: ${e.offsetX - 10}px;
                    top: ${e.offsetY - 10}px;
                `;

                this.style.position = 'relative';
                this.style.overflow = 'hidden';
                this.appendChild(ripple);

                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });
    });

    // Add ripple animation
    const style = document.createElement('style');
    style.textContent = `
        @@keyframes ripple {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
    `;
    document.head.appendChild(style);
</script>