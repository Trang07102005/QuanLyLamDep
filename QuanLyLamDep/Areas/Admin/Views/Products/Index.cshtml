@model IEnumerable<QuanLyLamDep.Models.Product>

@{
    ViewBag.Title = "Danh sách sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<link href="https://fonts.googleapis.com/css2?family=Varela+Round&display=swap&subset=vietnamese" rel="stylesheet" />

<style>
    body {
        font-family: 'Varela Round', sans-serif;
    }

    .product-list-container {
        max-width: 1000px;
        margin: 20px auto;
        background: #fff;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow-x: auto;
        padding: 20px;
    }

    table.product-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.95rem;
    }

    table.product-table th,
    table.product-table td {
        padding: 12px 15px;
        border-bottom: 1px solid #e9ecef;
        text-align: left;
        vertical-align: middle;
    }

    table.product-table th {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        font-weight: 600;
    }

    table.product-table tbody tr:hover {
        background-color: rgba(102, 126, 234, 0.1);
        cursor: pointer;
    }

    .btn-action {
        padding: 6px 14px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
        text-decoration: none;
        color: white;
        display: inline-block;
        transition: all 0.3s ease;
    }

    .btn-edit { background: #667eea; margin-right: 10px; }
    .btn-edit:hover { background: #5469d4; }

    .btn-details { background: #20c997; }
    .btn-details:hover { background: #17a68a; }

    .btn-delete { background: #dc3545; }
    .btn-delete:hover { background: #bb2d3b; }

    .create-new-btn {
        display: inline-block;
        margin-bottom: 15px;
        padding: 10px 25px;
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        font-weight: 700;
        border-radius: 25px;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .create-new-btn:hover { background: #198754; }

    .action-buttons {
        display: flex;
        gap: 10px;
        flex-wrap: nowrap;
    }

    .search-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
        align-items: center;
    }

    .search-container input {
        min-width: 150px;
    }

    
</style>

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <div class="row justify-content-center my-4">
        <div class="col-md-10 offset-md-1">
            <div class="search-container">
                <input type="text" name="searchString" class="form-control" placeholder="Tìm theo tên hoặc giá..." value="@ViewBag.CurrentFilter" />

                <input type="number" name="minPrice" class="form-control" placeholder="Giá từ..." value="@ViewBag.MinPrice" min="0" />

                <input type="number" name="maxPrice" class="form-control" placeholder="Đến..." value="@ViewBag.MaxPrice" min="0" />

                <button type="submit" class="btn btn-primary px-4 rounded-pill fw-semibold">
                    <i class="fa fa-search me-1"></i> Tìm kiếm
                </button>
            </div>
        </div>
    </div>
}

<div class="product-list-container">
    <h2>@ViewBag.Title</h2>

    <p>
        @Html.ActionLink("Tạo sản phẩm mới", "Create", null, new { @class = "create-new-btn" })
    </p>

    <table class="product-table">
        <thead>
            <tr>
                <th>Tên sản phẩm</th>
                <th>Mô tả</th>
                <th>Đơn vị tính</th>
                <th>Giá</th>
                <th>Ngày nhập</th>
                <th>Hình ảnh</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.Unit)</td>
                    <td>@String.Format("{0:N0} ₫", item.UnitPrice)</td>
                    <td>@(item.ImportDate.HasValue ? item.ImportDate.Value.ToString("dd/MM/yyyy") : "")</td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@Url.Content(item.ImageUrl)" alt="Ảnh sản phẩm" style="max-height: 60px;" />
                        }
                        else
                        {
                            <span class="text-muted">Không có ảnh</span>
                        }
                    </td>

                    <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                    <td>
                        <div class="action-buttons">
                            @Html.ActionLink("Sửa", "Edit", new { id = item.ProductID }, new { @class = "btn-action btn-edit" })
                            @Html.ActionLink("Chi tiết", "Details", new { id = item.ProductID }, new { @class = "btn-action btn-details" })
                            @Html.ActionLink("Xóa", "Delete", new { id = item.ProductID }, new { @class = "btn-action btn-delete", onclick = "return confirm('Bạn có chắc chắn muốn xóa sản phẩm này?');" })
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
